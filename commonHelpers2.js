import"./assets/modulepreload-polyfill-3cfb730f.js";import{i as a,S as E}from"./assets/vendor-8c59ed88.js";document.addEventListener("DOMContentLoaded",()=>{const m=document.getElementById("searchBar"),$=document.getElementById("searchButton"),n=document.getElementById("loadMoreButton"),u=document.getElementById("gallery"),o=document.querySelector(".loader");let l=1,h="",y=0,i=0;$.addEventListener("click",async c=>{c.preventDefault(),o.style.opacity=1,o.style.display="block",n.style.display="none";const t=m.value.trim();if(t===""){a.show({title:"Input Required",message:"Please enter a search term.",color:"yellow"}),o.style.display="none",o.style.opacity=0;return}t!==h&&(l=1,h=t,u.innerHTML="",y=0,i=0);const p="horizontal",r="true",e="44886630-c76369955f218994c10c946a0",s=40,d=`https://pixabay.com/api/?key=${e}&q=${encodeURIComponent(t)}&image_type=photo&orientation=${p}&safesearch=${r}&page=${l}&per_page=${s}`;try{const g=await(await fetch(d)).json();g.hits.length===0?a.show({title:"No results",message:"Sorry, there are no images matching your search query. Please try again!",color:"white"}):(y=g.totalHits,i+=g.hits.length,f(g.hits),i<y?n.style.display="block":a.show({title:"End of Results",message:"We're sorry, but you've reached the end of search results.",color:"white"}),l++),m.value=""}catch(w){console.error("Error fetching data:",w),a.show({title:"Error",message:"Failed to fetch images. Please try again later.",color:"red"})}finally{o.style.display="none",o.style.opacity=0}}),n.addEventListener("click",async()=>{if(h===""){a.show({title:"Input Required",message:"Please enter a search term.",color:"yellow"});return}o.style.display="block";const c="horizontal",t="true",p="44886630-c76369955f218994c10c946a0",r=20,e=`https://pixabay.com/api/?key=${p}&q=${encodeURIComponent(h)}&image_type=photo&orientation=${c}&safesearch=${t}&page=${l}&per_page=${r}`;try{const d=await(await fetch(e)).json();d.hits.length===0?(a.show({title:"No results",message:"Sorry, there are no more images matching your search query.",color:"white"}),n.style.display="none"):(i+=d.hits.length,f(d.hits),i>=y?(n.style.display="none",a.show({title:"End of Results",message:"We're sorry, but you've reached the end of search results.",color:"white"})):l++)}catch(s){console.error("Error fetching data:",s),a.show({title:"Error",message:"Failed to fetch images. Please try again later.",color:"red"})}finally{o.style.display="none"}});function f(c){const t=document.createDocumentFragment();c.forEach(e=>{const s=document.createElement("div");s.classList.add("image-card"),s.innerHTML=`
                <a href="${e.largeImageURL}" class="gallery-link">
                    <img src="${e.webformatURL}" alt="${e.tags}">
                </a>
                <div class="image-info">
                    <p><strong>Likes:</strong> ${e.likes}</p>
                    <p><strong>Views:</strong> ${e.views}</p>
                    <p><strong>Comments:</strong> ${e.comments}</p>
                    <p><strong>Downloads:</strong> ${e.downloads}</p>
                </div>
            `,t.appendChild(s)}),u.appendChild(t),new E(".gallery-link").refresh();const r=document.querySelector(".image-card");if(r){const{height:e}=r.getBoundingClientRect();window.scrollBy({top:e*2,behavior:"smooth"})}}});
//# sourceMappingURL=commonHelpers2.js.map
